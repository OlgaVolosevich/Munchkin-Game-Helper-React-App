{"version":3,"sources":["components/Players/PlayersCards/PlayerName/index.js","components/Players/PlayersCards/PlayerGameInfo/EditorModal/index.js","components/Players/PlayersCards/PlayerGameInfo/EditorModal/GenderInput/index.js","components/Form/SelectInput/index.js","components/Players/PlayersCards/PlayerGameInfo/index.js","components/Players/PlayersCards/PlayerLevel/index.js","components/Players/PlayersCards/index.js","components/Players/PlayersList/index.js","components/Players/index.js","components/Form/NameInput/index.js","components/Form/index.js","components/GamePreset/index.js","components/WarningModal/index.js","gameInfo.js","defaultStateValues.js","App.js","index.js"],"names":["PlayerName","props","name","deletePlayer","id","className","onClick","EditorModal","content","toggleModal","GenderInput","changeGender","buttons","value","map","index","clickHandler","SelectInput","title","inputHandler","options","htmlFor","onChange","event","option","PlayerGameInfo","setState","state","isInfoEdited","editPlayerInfo","targetClassList","target","classList","classRaceFlag","gameClassOptions","gameRaceOptions","selectHandler","first","second","gender","modal","showValue","classInput","raceInput","stopPropagation","secondClass","current","remove","secondRace","gameInfo","defaultClass","add","defaultRace","classOptions","gameClass","raceOptions","gameRace","React","createRef","this","ref","Component","PlayerLevel","regulateLevel","level","PlayersCards","players","playersCards","PlayersList","listItems","Players","isGameStarted","length","NameInput","inputRef","errorMessage","type","placeholder","onKeyDown","Form","changeHandler","style","visibility","player","buttonHandler","addNewPlayer","resetInputValues","nameInput","focus","JSON","parse","stringify","emptyPlayer","preventDefault","gameOptions","action","method","onSubmit","submitHandler","GamePreset","WarningModal","text","closeWarning","winner","manageGame","buttonText","innerText","minLevel","winLevel","minPlayersNumber","maxPlayersNumber","newGameState","warning","isNeeded","App","playerInfo","checkPlayersNumber","Date","now","newPlayer","showWarning","filter","flag","resetGame","warningText","isLevelReducing","contains","changingField","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a2e0210.chunk.js","sourcesContent":["import \"./../../../../fonts/icomoon/style.css\";\r\nfunction PlayerName(props) {\r\n  const { name, deletePlayer, id } = props;\r\n  return (\r\n    <div className=\"players-cards__item__name\">\r\n      <p>{name}</p>\r\n      <span className=\"icon-bin\" onClick={() => deletePlayer(id)}></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerName;\r\n","import \"./../../../../../fonts/icomoon/style.css\";\r\nfunction EditorModal(props) {\r\n  const { content, toggleModal } = props;\r\n  return (\r\n    <div className=\"edit-modal\">\r\n      {content}\r\n      <span\r\n        onClick={toggleModal}\r\n        className=\"edit-modal__close-btn icon-cancel-circle\"\r\n      ></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditorModal;\r\n","function GenderInput(props) {\r\n  const genderOptions = [\r\n    {\r\n      value: \"Мужчина\",\r\n      name: \"gender\",\r\n    },\r\n    {\r\n      value: \"Женщина\",\r\n      name: \"gender\",\r\n    },\r\n  ];\r\n  const { changeGender, id, toggleModal } = props;\r\n  const clickHandler = (id, name, value) => {\r\n    changeGender(id, name, value);\r\n    toggleModal();\r\n  };\r\n\r\n  const buttons = genderOptions.map(({ value, name }, index) => {\r\n    return (\r\n      <button\r\n        className=\"edit-modal__gender-btn\"\r\n        key={index}\r\n        onClick={() => clickHandler(id, name, value)}\r\n      >\r\n        {value}\r\n      </button>\r\n    );\r\n  });\r\n  return <>{buttons}</>;\r\n}\r\n\r\nexport default GenderInput;\r\n","function SelectInput(props) {\r\n  const { title, name, value, inputHandler, options, id } = props;\r\n  return (\r\n    <div className=\"select-input\">\r\n      <label htmlFor={name}>{title} </label>\r\n      <select\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        onChange={(event) => inputHandler(event, id, name)}\r\n      >\r\n        {options.map((option, index) => (\r\n          <option key={index}>{option}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectInput;\r\n","import { Component } from \"react\";\r\nimport React from \"react\";\r\nimport EditorModal from \"./EditorModal\";\r\nimport GenderInput from \"./EditorModal/GenderInput\";\r\nimport SelectInput from \"../../../Form/SelectInput\";\r\nimport \"./../../../../fonts/icomoon/style.css\";\r\n\r\nclass PlayerGameInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isInfoEdited: false,\r\n      modal: null,\r\n      gameClassOptions: {\r\n        title: \"Класс\",\r\n        options: [...props.gameInfo.classOptions],\r\n        name: \"gameClass\",\r\n        value: this.props.gameClass,\r\n      },\r\n      gameRaceOptions: {\r\n        title: \"Расса\",\r\n        options: [...props.gameInfo.raceOptions],\r\n        name: \"gameRace\",\r\n        value: this.props.gameRace,\r\n      },\r\n    };\r\n    this.secondClass = React.createRef();\r\n    this.secondRace = React.createRef();\r\n  }\r\n  toggleModal = () => {\r\n    return this.setState((state) => ({\r\n      isInfoEdited: !state.isInfoEdited,\r\n    }));\r\n  };\r\n  clickHandler = (event) => {\r\n    const { editPlayerInfo, id } = this.props;\r\n    const targetClassList = event.target.classList[0];\r\n    const classRaceFlag = event.target.classList[1];\r\n    const gameClassOptions = { ...this.state.gameClassOptions };\r\n    const gameRaceOptions = { ...this.state.gameRaceOptions };\r\n    const selectHandler = (event, id, name) => {\r\n      if (classRaceFlag === \"first\") {\r\n        editPlayerInfo(id, name, event.target.value, classRaceFlag);\r\n        if (event.target.id === \"gameClass\") {\r\n          this.setState({\r\n            gameClassOptions,\r\n          });\r\n        } else if (event.target.id === \"gameRace\") {\r\n          gameRaceOptions.value.first = event.target.value;\r\n          this.setState({\r\n            gameRaceOptions,\r\n          });\r\n        }\r\n      } else if (classRaceFlag === \"second\") {\r\n        editPlayerInfo(id, name, event.target.value, classRaceFlag);\r\n        if (event.target.id === \"gameClass\") {\r\n          this.setState({\r\n            gameClassOptions,\r\n          });\r\n        } else if (event.target.id === \"gameRace\") {\r\n          gameRaceOptions.value.second = event.target.value;\r\n          this.setState({\r\n            gameRaceOptions,\r\n          });\r\n        }\r\n      }\r\n      this.toggleModal();\r\n    };\r\n    if (targetClassList === \"gender-btn\") {\r\n      const gender = (\r\n        <GenderInput\r\n          id={id}\r\n          toggleModal={this.toggleModal}\r\n          changeGender={editPlayerInfo}\r\n        />\r\n      );\r\n      this.setState({\r\n        modal: <EditorModal content={gender} toggleModal={this.toggleModal} />,\r\n      });\r\n    } else if (targetClassList === \"class-btn\") {\r\n      const { title, options, name, value } = gameClassOptions;\r\n      const showValue =\r\n        classRaceFlag === \"second\" ? value[\"second\"] : value[\"first\"];\r\n      const classInput = (\r\n        <SelectInput\r\n          id={id}\r\n          title={title}\r\n          name={name}\r\n          value={showValue}\r\n          inputHandler={selectHandler}\r\n          options={options}\r\n        />\r\n      );\r\n      this.setState({\r\n        modal: (\r\n          <EditorModal content={classInput} toggleModal={this.toggleModal} />\r\n        ),\r\n      });\r\n    } else if (targetClassList === \"race-btn\") {\r\n      const { title, options, name, value } = gameRaceOptions;\r\n      const showValue =\r\n        classRaceFlag === \"second\" ? value[\"second\"] : value[\"first\"];\r\n      const raceInput = (\r\n        <SelectInput\r\n          id={id}\r\n          title={title}\r\n          name={name}\r\n          value={showValue}\r\n          inputHandler={selectHandler}\r\n          options={options}\r\n        />\r\n      );\r\n      this.setState({\r\n        modal: (\r\n          <EditorModal content={raceInput} toggleModal={this.toggleModal} />\r\n        ),\r\n      });\r\n    } else if (targetClassList === \"icon-plus\") {\r\n      event.stopPropagation();\r\n      if (classRaceFlag === \"gameClass\") {\r\n        return this.secondClass.current.classList.remove(\"hidden\");\r\n      } else if (classRaceFlag === \"gameRace\") {\r\n        return this.secondRace.current.classList.remove(\"hidden\");\r\n      }\r\n    } else if (targetClassList === \"icon-minus\") {\r\n      event.stopPropagation();\r\n      if (classRaceFlag === \"gameClass\") {\r\n        editPlayerInfo(\r\n          id,\r\n          classRaceFlag,\r\n          this.props.gameInfo.defaultClass,\r\n          \"second\"\r\n        );\r\n        this.secondClass.current.classList.add(\"hidden\");\r\n        return;\r\n      } else if (classRaceFlag === \"gameRace\") {\r\n        editPlayerInfo(\r\n          id,\r\n          classRaceFlag,\r\n          this.props.gameInfo.defaultRace,\r\n          \"second\"\r\n        );\r\n        this.secondRace.current.classList.add(\"hidden\");\r\n        return;\r\n      }\r\n    }\r\n    this.toggleModal();\r\n  };\r\n  render() {\r\n    const { gameRace, gameClass, gender } = this.props;\r\n    const { isInfoEdited, modal } = this.state;\r\n    return (\r\n      <>\r\n      <div className=\"players-cards__item__game-info\">\r\n        <button className=\"race-btn first\" onClick={this.clickHandler}>\r\n          {gameRace[\"first\"]}\r\n          <span\r\n            title=\"Добавить вторую рассу\"\r\n            className=\"icon-plus gameRace\"\r\n          ></span>\r\n        </button>\r\n        <button\r\n          ref={this.secondRace}\r\n          className=\"race-btn second hidden\"\r\n          onClick={this.clickHandler}\r\n        >\r\n          {gameRace[\"second\"]}\r\n          <span\r\n            title=\"Удалить вторую рассу\"\r\n            className=\"icon-minus gameRace\"\r\n          ></span>\r\n        </button>\r\n        <button className=\"class-btn first\" onClick={this.clickHandler}>\r\n          {gameClass[\"first\"]}\r\n          <span\r\n            title=\"Добавить второй класс\"\r\n            className=\"icon-plus gameClass\"\r\n          ></span>\r\n        </button>\r\n        <button\r\n          ref={this.secondClass}\r\n          className=\"class-btn second hidden\"\r\n          onClick={this.clickHandler}\r\n        >\r\n          {gameClass[\"second\"]}\r\n          <span\r\n            title=\"Удалить второй класс\"\r\n            className=\"icon-minus gameClass\"\r\n          ></span>\r\n        </button>\r\n        <button className=\"gender-btn\" onClick={this.clickHandler}>\r\n          {gender || \"Пол не указан\"}\r\n        </button>\r\n      </div>\r\n      {isInfoEdited && modal}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default PlayerGameInfo;\r\n","import \"./../../../../fonts/icomoon/style.css\";\r\nfunction PlayerLevel(props) {\r\n  const { regulateLevel, id, level } = props;\r\n  return (\r\n    <div className=\"players-cards__item__level\">\r\n      <p className=\"level-label\">Уровень</p>\r\n      <p className=\"level-regulation-container\">\r\n        <span\r\n          className=\"level-reducer icon-minus\"\r\n          onClick={(event) => regulateLevel(event, id)}\r\n        ></span>{\" \"}\r\n        <span className=\"level-container\">{level} </span>\r\n        <span\r\n          className=\"level-adder icon-plus\"\r\n          onClick={(event) => regulateLevel(event, id)}\r\n        ></span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nexport default PlayerLevel;\r\n","import PlayerName from \"./PlayerName\";\r\nimport PlayerGameInfo from \"./PlayerGameInfo\";\r\nimport PlayerLevel from \"./PlayerLevel\";\r\n\r\nfunction PlayersCards(props) {\r\n  const { players, deletePlayer, regulateLevel, editPlayerInfo, gameInfo } =\r\n    props;\r\n  const playersCards = players.map(\r\n    ({ name, gameRace, gameClass, level, id, gender }) => {\r\n      return (\r\n        <div className=\"players-cards__item\" key={id}>\r\n          <PlayerName name={name} id={id} deletePlayer={deletePlayer} />\r\n          <PlayerGameInfo\r\n            gender={gender}\r\n            gameRace={gameRace}\r\n            gameClass={gameClass}\r\n            editPlayerInfo={editPlayerInfo}\r\n            id={id}\r\n            gameInfo={gameInfo}\r\n          />\r\n          <PlayerLevel id={id} level={level} regulateLevel={regulateLevel} />\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n  return <div className=\"players-cards\">{playersCards}</div>;\r\n}\r\nexport default PlayersCards;\r\n","import \"./../../../fonts/icomoon/style.css\"\r\nfunction PlayersList(props) {\r\n  const { players, deletePlayer } = props;\r\n  const listItems = players.map(({id, name}) => (\r\n    <li key={id}>\r\n      {name} <span className=\"players-container__discard-icon icon-bin\" onClick={() => deletePlayer(id)}></span>\r\n    </li>\r\n  ));\r\n  return <ul className=\"players-container__names\">{listItems}</ul>;\r\n}\r\n\r\nexport default PlayersList;\r\n","import \"./styles.css\";\r\nimport PlayersCards from \"./PlayersCards\";\r\nimport PlayersList from \"./PlayersList\";\r\nfunction Players(props) {\r\n  const {\r\n    players,\r\n    isGameStarted,\r\n    deletePlayer,\r\n    regulateLevel,\r\n    editPlayerInfo,\r\n    gameInfo,\r\n  } = props;\r\n  const content = isGameStarted ? (\r\n    <PlayersCards\r\n      players={players}\r\n      deletePlayer={deletePlayer}\r\n      regulateLevel={regulateLevel}\r\n      editPlayerInfo={editPlayerInfo}\r\n      gameInfo={gameInfo}\r\n    />\r\n  ) : (\r\n    <PlayersList players={players} deletePlayer={deletePlayer} />\r\n  );\r\n  return (\r\n    <div className={`players-container${isGameStarted ? \" solo\" : \"\"}`}>\r\n      <h2 className=\"header\">Игроки</h2>\r\n      {players.length ? (\r\n        content\r\n      ) : (\r\n        <p className=\"empty-list\">Список игроков пуст</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Players;\r\n","function NameInput(props) {\r\n  const { name, inputHandler, inputRef, errorMessage } = props;\r\n  return (\r\n    <>\r\n      <div className=\"form__name-input\">\r\n        <label htmlFor=\"name\">Имя</label>\r\n        <input\r\n          name=\"name\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Введите имя\"\r\n          value={name}\r\n          onChange={inputHandler}\r\n          onKeyDown={inputHandler}\r\n          ref={inputRef}\r\n        />\r\n        <p className=\"form__error-message\" ref={errorMessage}>\r\n          У манчкина должно быть имя!\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NameInput;\r\n","import \"./styles.css\";\r\nimport React from \"react\";\r\nimport { Component } from \"react\";\r\nimport NameInput from \"./NameInput\";\r\nimport SelectInput from \"./SelectInput\";\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      player: {\r\n        ...JSON.parse(JSON.stringify(this.props.emptyPlayer)),\r\n      },\r\n    };\r\n    this.errorMessage = React.createRef();\r\n    this.nameInput = React.createRef();\r\n  }\r\n  submitHandler(event) {\r\n    event.preventDefault();\r\n  }\r\n  changeHandler = (event) => {\r\n    if (event.target.id === \"name\" && event.target.value) {\r\n      this.errorMessage.current.style.visibility = \"hidden\";\r\n    }\r\n    const player = { ...this.state.player };\r\n    if (event.target.name === \"gameClass\" || event.target.name === \"gameRace\") {\r\n      player[event.target.name][\"first\"] = event.target.value;\r\n    } else {\r\n      player[event.target.name] = event.target.value;\r\n    }\r\n\r\n    this.setState({\r\n      player,\r\n    });\r\n  };\r\n  buttonHandler = () => {\r\n    if (this.state.player.name) {\r\n      const player = { ...this.state.player };\r\n      this.props.addNewPlayer(player);\r\n      this.resetInputValues();\r\n    } else {\r\n      this.errorMessage.current.style.visibility = \"visible\";\r\n      this.nameInput.current.focus();\r\n    }\r\n  };\r\n  resetInputValues = () => {\r\n    this.setState({\r\n      player: { ...JSON.parse(JSON.stringify(this.props.emptyPlayer)) },\r\n    });\r\n  };\r\n  render() {\r\n    const { raceOptions, classOptions } = this.props.gameInfo;\r\n    const { name, gameClass, gameRace } = this.state.player;\r\n    const gameOptions = [\r\n      {\r\n        title: \"Раса\",\r\n        options: [...raceOptions],\r\n        name: \"gameRace\",\r\n        value: gameRace[\"first\"],\r\n      },\r\n      {\r\n        title: \"Класс\",\r\n        options: [...classOptions],\r\n        name: \"gameClass\",\r\n        value: gameClass[\"first\"],\r\n      },\r\n    ];\r\n    return (\r\n      <form\r\n        className=\"form\"\r\n        action=\"/\"\r\n        method=\"POST\"\r\n        name=\"playerInfo\"\r\n        onSubmit={this.submitHandler}\r\n      >\r\n        <NameInput\r\n          name={name}\r\n          inputHandler={this.changeHandler}\r\n          errorMessage={this.errorMessage}\r\n          inputRef={this.nameInput}\r\n        />\r\n        {gameOptions.map(({ title, options, value, name }, index) => (\r\n          <SelectInput\r\n            key={index}\r\n            title={title}\r\n            name={name}\r\n            value={value}\r\n            inputHandler={this.changeHandler}\r\n            options={options}\r\n          />\r\n        ))}\r\n        <button className=\"form__add-player-btn\" onClick={this.buttonHandler}>\r\n          Добавить игрока\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import Form from \"../Form\";\r\n\r\nfunction GamePreset(props) {\r\n  const { addNewPlayer, gameInfo, emptyPlayer } = props;\r\n  return (\r\n    <div className=\"preset-container\">\r\n      <h2 className=\"header\">Добавьте игроков</h2>\r\n      <Form\r\n        addNewPlayer={addNewPlayer}\r\n        gameInfo={gameInfo}\r\n        emptyPlayer={emptyPlayer}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GamePreset;\r\n","import \"./styles.css\";\r\nfunction WarningModal(props) {\r\n  const { text, closeWarning, winner, manageGame } = props;\r\n  const content = winner ? `Победитель: ${winner.name}!` : text;\r\n  const buttonText = winner ? \"Сыграть снова\" : \"ОК\";\r\n  const clickHandler = (event) => {\r\n    if (event.target.innerText === \"Сыграть снова\") {\r\n      manageGame();\r\n    }\r\n    closeWarning();\r\n  };\r\n  return (\r\n    <div className=\"warning\">\r\n      <p className=\"warning__text\">{content}</p>\r\n      <button\r\n        className=\"warning__close-btn\"\r\n        onClick={(event) => clickHandler(event)}\r\n      >\r\n        {buttonText}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WarningModal;\r\n","const gameInfo = {\r\n  classOptions: [\"Нет класса\", \"Волшебник\", \"Вор\", \"Клирик\", \"Воин\"],\r\n  raceOptions: [\"Нет расы\", \"Эльф\", \"Хафлинг\", \"Дварф\"],\r\n  defaultClass: \"Нет класса\",\r\n  defaultRace: \"Нет расы\",\r\n  minLevel: 1,\r\n  winLevel: 10,\r\n  minPlayersNumber: 2,\r\n  maxPlayersNumber: 6,\r\n};\r\n\r\nexport default gameInfo;\r\n","const newGameState = {\r\n  players: [],\r\n  isGameStarted: false,\r\n  winner: null,\r\n  warning: {\r\n    isNeeded: false,\r\n    value: \"\",\r\n  },\r\n};\r\n\r\nconst emptyPlayer = {\r\n  name: \"\",\r\n  gameClass: {\r\n    first: \"Нет класса\",\r\n    second: \"Нет класса\",\r\n  },\r\n  gameRace: {\r\n    first: \"Нет рассы\",\r\n    second: \"Нет рассы\",\r\n  },\r\n  gender: null,\r\n};\r\n\r\nexport { newGameState, emptyPlayer };\r\n","import \"./App.css\";\r\nimport { Component } from \"react\";\r\nimport Players from \"./components/Players\";\r\nimport GamePreset from \"./components/GamePreset\";\r\nimport WarningModal from \"./components/WarningModal\";\r\nimport gameInfo from \"./gameInfo\";\r\nimport { newGameState, emptyPlayer } from \"./defaultStateValues\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...newGameState,\r\n    };\r\n  }\r\n  addNewPlayer = (playerInfo) => {\r\n    const arePlayersFull = !this.checkPlayersNumber(\"max\");\r\n    if (!arePlayersFull) {\r\n      const id = Date.now();\r\n      const { minLevel } = gameInfo;\r\n      const newPlayer = { ...playerInfo, id, level: minLevel };\r\n      const players = [...this.state.players, newPlayer];\r\n      return this.setState({\r\n        players,\r\n      });\r\n    } else {\r\n      const warningText = `Вы добавили максимальное количество игроков!`;\r\n      this.showWarning(warningText);\r\n    }\r\n  };\r\n  deletePlayer = (id) => {\r\n    const players = [...this.state.players].filter(\r\n      (player) => player.id !== id\r\n    );\r\n    if (!players.length) {\r\n      let { isGameStarted } = this.state;\r\n      isGameStarted = false;\r\n      return this.setState({\r\n        players,\r\n        isGameStarted,\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        players,\r\n      });\r\n    }\r\n  };\r\n  checkPlayersNumber = (flag) => {\r\n    switch (flag) {\r\n      case \"min\":\r\n        return this.state.players.length >= gameInfo.minPlayersNumber;\r\n      case \"max\":\r\n        return this.state.players.length < gameInfo.maxPlayersNumber;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  showWarning = (text) => {\r\n    const warning = { ...this.state.warning };\r\n    warning.isNeeded = true;\r\n    warning.value = text || \"Упс! Что-то пошло не так!\";\r\n    return this.setState({\r\n      warning,\r\n    });\r\n  };\r\n  closeWarning = () => {\r\n    const warning = { ...this.state.warning };\r\n    warning.isNeeded = false;\r\n    return this.setState({\r\n      warning,\r\n    });\r\n  };\r\n  resetGame = () => {\r\n    return this.setState({\r\n      ...newGameState,\r\n    });\r\n  };\r\n  manageGame = () => {\r\n    const winner = this.state.winner;\r\n    if (winner) {\r\n      return this.resetGame();\r\n    }\r\n    const arePlayersEnough = this.checkPlayersNumber(\"min\");\r\n    if (arePlayersEnough) {\r\n      this.setState((state) => ({\r\n        isGameStarted: !state.isGameStarted,\r\n      }));\r\n    } else {\r\n      const { players } = this.state;\r\n      const warningText = `Добавьте ещё минимум ${\r\n        gameInfo.minPlayersNumber - players.length\r\n      } игрока`;\r\n      this.showWarning(warningText);\r\n    }\r\n  };\r\n  regulateLevel = (event, id) => {\r\n    const isLevelReducing = event.target.classList.contains(\"level-reducer\");\r\n    const { minLevel, winLevel } = gameInfo;\r\n    const players = [...this.state.players];\r\n    const player = players.filter((player) => player.id === id)[0];\r\n    if (isLevelReducing) {\r\n      player.level > minLevel && player.level--;\r\n    } else {\r\n      player.level < winLevel && player.level++;\r\n    }\r\n    if (player.level === winLevel) {\r\n      this.setState({\r\n        winner: player,\r\n      });\r\n      this.showWarning();\r\n    }\r\n    this.setState({\r\n      players,\r\n    });\r\n  };\r\n  editPlayerInfo = (id, changingField, value, flag) => {\r\n    const players = [...this.state.players];\r\n    const player = players.filter((player) => player.id === id)[0];\r\n    if (\r\n      (changingField === \"gameClass\" || changingField === \"gameRace\") &&\r\n      flag === \"first\"\r\n    ) {\r\n      player[changingField][\"first\"] = value;\r\n    } else if (\r\n      (changingField === \"gameClass\" || changingField === \"gameRace\") &&\r\n      flag === \"second\"\r\n    ) {\r\n      player[changingField][\"second\"] = value;\r\n    } else {\r\n      player[changingField] = value;\r\n    }\r\n    this.setState({\r\n      players,\r\n    });\r\n  };\r\n  render() {\r\n    const { isGameStarted, players, warning, winner } = this.state;\r\n    return (\r\n      <>\r\n        {(!isGameStarted || !players.length) && (\r\n          <GamePreset\r\n            addNewPlayer={this.addNewPlayer}\r\n            gameInfo={gameInfo}\r\n            emptyPlayer={emptyPlayer}\r\n          />\r\n        )}\r\n        <Players\r\n          players={players}\r\n          isGameStarted={isGameStarted}\r\n          deletePlayer={this.deletePlayer}\r\n          regulateLevel={this.regulateLevel}\r\n          editPlayerInfo={this.editPlayerInfo}\r\n          gameInfo={gameInfo}\r\n        />\r\n        {!isGameStarted && (\r\n          <button className=\"start-game-btn\" onClick={this.manageGame}>\r\n            Начать игру\r\n          </button>\r\n        )}\r\n        {warning.isNeeded && (\r\n          <WarningModal\r\n            text={warning.value}\r\n            winner={winner}\r\n            closeWarning={this.closeWarning}\r\n            manageGame={this.manageGame}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}